#!/bin/bash
#
# This script is used to write the ID EEPROM of the Moitessier HAT.
# 
# Usage: sudo ./eeprom_update_moitesssier

# script configuration
configFile=/boot/config.txt                                 # the boot configuration file used by the Raspberry Pi
overlayPath=/boot/overlays                                  # the path to the device tree overlay directory on the Raspberry Pi
moitessierDriverName=moitessier                             # the name of the Moitessier HAT driver module
moitessierDriverPath=${moitessierDriverName}.ko             # the path of the Moitessier HAT driver module
moitessierCtrlApp=../app/moitessier_ctrl/moitessier_ctrl    # the application used to control the Moitessier HAT
moitessierDevice=/dev/moitessier.ctrl                       # the device used to write control commands to the Moitessier HAT
moitessierDeviceTreeImage=moitessier.eep                    # the EEPROM image to write
moitessierDeviceTree=moitessier.dtbo                        # the compiled device tree, this will be used as overlay



dtparamValid=0
dtoverlayValid=0

unload()
{
    echo "INFO: Unloading \"$1\"."
	rmmod $1
}

error()
{
    echo
    echo "******************************************************************************************"
    echo "ERROR occured!!"
    echo
    echo $1
    echo "******************************************************************************************"
    echo
}

info()
{
    echo
    echo "******************************************************************************************"
    echo $1
    echo "******************************************************************************************"
    echo
}

if [ "$EUID" -ne 0 ]
then 
    error "You must run this script with root privileges."
    exit
fi

# check if the relevant parameters are set in the configuration file to load the device tree
while IFS='' read -r line || [[ -n "$line" ]]; do
    if [ "$line" = "dtparam=i2c_vc=on" ]
    then
        dtparamValid=1
    fi
    if [ "$line" = "dtoverlay=moitessier" ]
    then
        dtoverlayValid=1
    fi
done < "$configFile"

if [ $dtparamValid == "0" ]
then    
    sh -c "echo 'dtparam=i2c_vc=on' >> $configFile"
fi
    
if [ $dtoverlayValid == "0" ]
then    
    sh -c "echo 'dtoverlay=moitessier' >> $configFile"
fi

cp ${moitessierDeviceTree} ${overlayPath}
if [ $? -ne 0 ]
then
    error "Copying device tree \"${moitessierDeviceTree}\" to \"${overlayPath}\" failed."
    exit 1
fi

# we need to reboot the Raspberry Pi to apply the changes in the configuration
if [ $dtparamValid == "0" -o $dtoverlayValid == "0" ] 
then
    info "${configFile} has been changed. System will reboot. You need to call this script afterwards again."
    sleep 4
    reboot
fi    

# Check if OpenPlotter, and especially kplex, is running. If running, we need to stop it, otherwise loading the
# driver for the Moitessier HAT fails as resource is busy.
kplex=kplex
pid=$(pidof ${kplex})
if [ $? -eq 0 ]
then
    echo "INFO: Killing process ${kplex}."
    pkill ${kplex}
fi  

lsm=$(lsmod | grep $moitessierDriverName)
if [ $? -eq 0 ]
then
    echo "WARNING: Module \"$moitessierDriverName\" is loaded, we will unload to gain access to the required GPIO pins."
    unload $moitessierDriverName
fi

insmod $moitessierDriverPath
if [ $? -ne 0 ]
then
    error "Could not load \"$moitessierDriverPath\"."
    exit 1
fi

./${moitessierCtrlApp} ${moitessierDevice} 6 0
if [ $? -ne 0 ]
then
    error "Could not disable EEPROM write protection."
    exit 1
fi

./eepflash.sh -w -f=${moitessierDeviceTreeImage} -t=24c32 -d=0 -a=50 --force
if [ $? -ne 0 ]
then
    error "Could not write EEPROM image."
    exit 1
fi


# if the EEPROM is written, we don't need to load the device tree from the overlay directory, as the relevant information
# is directly loaded from the EEPROM
sed -i '/dtoverlay=moitessier/d' ${configFile}

echo 
echo "**************************************************************************************"
echo "*                                                                                    *"
echo "* EEPROM IMAGE WRITTEN SUCCESSFULLY!!!                                               *"
echo "*                                                                                    *"
echo "* Rebooting system...                                                                *"
echo "*                                                                                    *"
echo "**************************************************************************************"
echo

sleep 4

reboot 